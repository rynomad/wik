"use strict";

var Application = require("substance-application");
var View = Application.View;
var $$ = Application.$$;
var TestActionView = require("./test_action_view");

var TestView = function(test, testSuiteView) {
  View.call(this);

  this.test = test;
  this.testSuiteView = testSuiteView;

  this.testActionViews = [];
};

TestView.Prototype = function() {
  var __super__ = View.prototype;

  this.render = function() {
    this.el.innerHTML = "";
    this.el.classList.add("test");

    var titleEl = $$(".name", {
      text: this.test.name
    });

    var actionsEl = $$(".actions");

    // for every action create a TestAction view
    for (var i = 0; i < this.test.actions.length; i++) {
      var testAction = this.test.actions[i];
      var testActionView = new TestActionView(testAction, this);
      this.testActionViews.push(testActionView);

      var actionEl = testActionView.render().el;
      // actionEl.setAttribute("data-idx", i);

      actionsEl.appendChild(actionEl);
    }

    this.el.appendChild(titleEl);
    this.el.appendChild(actionsEl);

    return this;
  };

  this.dispose = function() {
    __super__.dispose.call(this);
    for (var i = 0; i < this.testActionViews.length; i++) {
      this.testActionViews[i].dispose();
    }
  };

  this.updateReport = function(report) {
    for (var i = 0; i < report.actions.length; i++) {
      var actionReport = report.actions[i]
      var actionView = this.testActionViews[i];
      actionView.updateReport(actionReport);
    };
  };
};
TestView.Prototype.prototype = View.prototype;
TestView.prototype = new TestView.Prototype();

module.exports = TestView;
